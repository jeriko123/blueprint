{"version":3,"sources":["components/Navbar/Navbar.tsx","components/Table/Table.tsx","components/SideBar/TreeComponent.tsx","components/SideBar/SideBar.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["NavBar","state","alignRight","handleDarkTheme","props","onDarkClick","this","exampleMenu","icon","text","shouldDismissPopover","onClick","onTableClick","disabled","className","classNames","Classes","NAVBAR","align","Alignment","LEFT","MINIMAL","onHomeClick","content","interactionKind","popoverClassName","POPOVER_CONTENT_SIZING","placement","isDark","RIGHT","ALIGN_RIGHT","React","TableDollarExample","columnNames","sparseCellData","sparseCellIntent","Intent","DANGER","sparseColumnIntents","renderCell","rowIndex","columnIndex","dataKey","value","intent","onCancel","cellValidator","onChange","onConfirm","cellSetter","renderColumnHeader","name","isValidValue","setSparseState","columns","map","_","index","cellRenderer","columnHeaderCellRenderer","numRows","test","stateKey","stateData","values","setState","forEachNode","nodes","callback","undefined","node","childNodes","forNodeAtPath","path","Tree","nodeFromPath","treeExampleReducer","action","type","newState1","cloneDeep","isSelected","newState2","payload","isExpanded","newState3","TreeComponent","INITIAL_STATE","dispatch","handleNodeClick","nodePath","e","originallySelected","shiftKey","handleNodeCollapse","_node","handleNodeExpand","contents","onNodeClick","onNodeCollapse","onNodeExpand","ELEVATION_0","contentSizing","popoverProps","Popover2Classes","POPOVER2_CONTENT_SIZING","id","hasCaret","label","secondaryLabel","PRIMARY","TREE_NODE_ICON","SideBar","elevation","interactive","animate","handleElevationChange","handleInteractiveChange","style","position","width","padding","height","display","justifyContent","alignItems","ROUND","leftIcon","placeholder","FocusStyleManager","onlyShowFocusOnTabs","App","useState","setIsDark","isTable","setIsTable","Date","date","setDate","document","body","TEXT_LARGE","MONOSPACE_TEXT","flexDirection","href","right","top","ELEVATION_1","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.eaf445e4.chunk.js","sourcesContent":["import * as React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport {\r\n  Alignment,\r\n  Button,\r\n  Classes,\r\n  H5,\r\n  Navbar,\r\n  NavbarDivider,\r\n  NavbarGroup,\r\n  NavbarHeading,\r\n  Switch,\r\n  Divider,\r\n  Menu,\r\n  MenuDivider,\r\n  MenuItem,\r\n  Popover,\r\n} from \"@blueprintjs/core\";\r\n\r\nexport interface INavbarExampleState {\r\n  alignRight: boolean;\r\n  isDark: boolean;\r\n  onTableClick: any;\r\n  onDarkClick: any;\r\n  onHomeClick: any;\r\n}\r\n\r\nexport class NavBar extends React.PureComponent<INavbarExampleState> {\r\n  public state = {\r\n    alignRight: false,\r\n  };\r\n\r\n  //   public handleDarkTheme() {\r\n  //     this.setState({ isDark: !this.state.isDark });\r\n  //   }\r\n\r\n  public handleDarkTheme = () => this.props.onDarkClick();\r\n\r\n  public render() {\r\n    const { alignRight } = this.state;\r\n    const exampleMenu = (\r\n      <Menu>\r\n        <MenuItem icon=\"graph\" text=\"Graph\" />\r\n        <MenuItem icon=\"map\" text=\"Map\" />\r\n        <MenuItem\r\n          icon=\"th\"\r\n          text=\"Table\"\r\n          shouldDismissPopover={true}\r\n          onClick={this.props.onTableClick}\r\n        />\r\n        <MenuItem icon=\"zoom-to-fit\" text=\"Nucleus\" disabled={true} />\r\n        <MenuDivider />\r\n        <MenuItem icon=\"cog\" text=\"Settings...\">\r\n          <MenuItem icon=\"add\" text=\"Add new application\" disabled={true} />\r\n          <MenuItem icon=\"remove\" text=\"Remove application\" />\r\n        </MenuItem>\r\n      </Menu>\r\n    );\r\n    return (\r\n      <Navbar className={classNames(Classes.NAVBAR)}>\r\n        <NavbarGroup align={Alignment.LEFT}>\r\n          <NavbarHeading>Blueprint</NavbarHeading>\r\n          <NavbarDivider />\r\n          <Button\r\n            className={Classes.MINIMAL}\r\n            icon=\"home\"\r\n            text=\"Home\"\r\n            onClick={this.props.onHomeClick}\r\n          />\r\n\r\n          <Popover\r\n            content={exampleMenu}\r\n            interactionKind=\"hover\"\r\n            popoverClassName={Classes.POPOVER_CONTENT_SIZING}\r\n            placement=\"bottom\"\r\n          >\r\n            <Button className={Classes.MINIMAL} icon=\"document\" text=\"Files\" />\r\n          </Popover>\r\n          <Button\r\n            className={Classes.MINIMAL}\r\n            icon={this.props.isDark ? \"flash\" : \"moon\"}\r\n            text={this.props.isDark ? \"light theme\" : \"dark theme\"}\r\n            onClick={this.handleDarkTheme}\r\n          />\r\n        </NavbarGroup>\r\n        <NavbarGroup align={Alignment.RIGHT}>\r\n          <NavbarDivider className={Classes.ALIGN_RIGHT} />\r\n          <Button\r\n            className={classNames(Classes.MINIMAL, Classes.ALIGN_RIGHT)}\r\n            icon=\"user\"\r\n          />\r\n          <Button\r\n            className={classNames(Classes.MINIMAL, Classes.ALIGN_RIGHT)}\r\n            icon=\"notifications\"\r\n          />\r\n          <Button\r\n            className={classNames(Classes.MINIMAL, Classes.ALIGN_RIGHT)}\r\n            icon=\"cog\"\r\n          />\r\n        </NavbarGroup>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n","import * as React from \"react\";\r\nimport { Intent } from \"@blueprintjs/core\";\r\nimport {\r\n  Cell,\r\n  Column,\r\n  Table2,\r\n  EditableCell2,\r\n  ColumnHeaderCell,\r\n  EditableName,\r\n} from \"@blueprintjs/table\";\r\n\r\ninterface iTableState {\r\n  columnNames: string[];\r\n  sparseCellData: { [key: string]: string };\r\n  sparseCellIntent: { [key: string]: Intent };\r\n  sparseColumnIntents?: Intent[];\r\n}\r\n\r\nexport class TableDollarExample extends React.PureComponent {\r\n  public static dataKey = (rowIndex: number, columnIndex: number) => {\r\n    return `${rowIndex}-${columnIndex}`;\r\n  };\r\n\r\n  public state: iTableState = {\r\n    columnNames: [\"Column1\", \"Column2\", \"Column2\", \"Column3\", \"Column4\", \"Column5\"],\r\n    sparseCellData: {\r\n      \"1-1\": \"editable\",\r\n      \"3-1\": \"validation 123\",\r\n    },\r\n    sparseCellIntent: {\r\n      \"3-1\": Intent.DANGER,\r\n    },\r\n    sparseColumnIntents: [],\r\n  };\r\n\r\n  public render() {\r\n    const columns = this.state.columnNames.map((_: string, index: number) => {\r\n      return (\r\n        <Column\r\n          key={index}\r\n          cellRenderer={this.renderCell}\r\n          columnHeaderCellRenderer={this.renderColumnHeader}\r\n        />\r\n      );\r\n    });\r\n\r\n    return <Table2 numRows={10}>{columns}</Table2>;\r\n  }\r\n\r\n  public renderCell = (rowIndex: number, columnIndex: number) => {\r\n    // <Cell>{`$${(rowIndex * 10).toFixed(2)}`}</Cell>\r\n    const dataKey = TableDollarExample.dataKey(rowIndex, columnIndex);\r\n    const value = this.state.sparseCellData[dataKey];\r\n    return (\r\n      <EditableCell2\r\n        value={value == null ? \"\" : value}\r\n        intent={this.state.sparseCellIntent[dataKey]}\r\n        onCancel={this.cellValidator(rowIndex, columnIndex)}\r\n        onChange={this.cellValidator(rowIndex, columnIndex)}\r\n        onConfirm={this.cellSetter(rowIndex, columnIndex)}\r\n      />\r\n    );\r\n  };\r\n\r\n  public renderColumnHeader = (columnIndex: number) => {\r\n    return <ColumnHeaderCell name={this.state.columnNames[columnIndex]} />;\r\n  };\r\n\r\n  private isValidValue(value: string) {\r\n    return /^[a-zA-Z]*$/.test(value);\r\n  }\r\n\r\n  private cellValidator = (rowIndex: number, columnIndex: number) => {\r\n    const dataKey = TableDollarExample.dataKey(rowIndex, columnIndex);\r\n    return (value: string) => {\r\n      const intent = this.isValidValue(value) ? null : Intent.DANGER;\r\n      this.setSparseState(\"sparseCellIntent\", dataKey, intent);\r\n      this.setSparseState(\"sparseCellData\", dataKey, value);\r\n    };\r\n  };\r\n\r\n  private cellSetter = (rowIndex: number, columnIndex: number) => {\r\n    const dataKey = TableDollarExample.dataKey(rowIndex, columnIndex);\r\n    return (value: string) => {\r\n      const intent = this.isValidValue(value) ? null : Intent.DANGER;\r\n      this.setSparseState(\"sparseCellData\", dataKey, value);\r\n      this.setSparseState(\"sparseCellIntent\", dataKey, intent);\r\n    };\r\n  };\r\n\r\n  private setSparseState<T>(stateKey: string, dataKey: string, value: T) {\r\n    const stateData = (this.state as any)[stateKey] as { [key: string]: T };\r\n    const values = { ...stateData, [dataKey]: value };\r\n    this.setState({ [stateKey]: values });\r\n  }\r\n}\r\n","/*\r\n * Copyright 2015 Palantir Technologies, Inc. All rights reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport { cloneDeep } from \"lodash-es\";\r\nimport * as React from \"react\";\r\n\r\nimport { Classes, Icon, Intent, TreeNodeInfo, Tree } from \"@blueprintjs/core\";\r\nimport {\r\n  Classes as Popover2Classes,\r\n  ContextMenu2,\r\n  Tooltip2,\r\n} from \"@blueprintjs/popover2\";\r\n\r\ntype NodePath = number[];\r\n\r\ntype TreeAction =\r\n  | {\r\n      type: \"SET_IS_EXPANDED\";\r\n      payload: { path: NodePath; isExpanded: boolean };\r\n    }\r\n  | { type: \"DESELECT_ALL\" }\r\n  | {\r\n      type: \"SET_IS_SELECTED\";\r\n      payload: { path: NodePath; isSelected: boolean };\r\n    };\r\n\r\nfunction forEachNode(\r\n  nodes: TreeNodeInfo[] | undefined,\r\n  callback: (node: TreeNodeInfo) => void\r\n) {\r\n  if (nodes === undefined) {\r\n    return;\r\n  }\r\n\r\n  for (const node of nodes) {\r\n    callback(node);\r\n    forEachNode(node.childNodes, callback);\r\n  }\r\n}\r\n\r\nfunction forNodeAtPath(\r\n  nodes: TreeNodeInfo[],\r\n  path: NodePath,\r\n  callback: (node: TreeNodeInfo) => void\r\n) {\r\n  callback(Tree.nodeFromPath(path, nodes));\r\n}\r\n\r\nfunction treeExampleReducer(state: TreeNodeInfo[], action: TreeAction) {\r\n  switch (action.type) {\r\n    case \"DESELECT_ALL\":\r\n      const newState1 = cloneDeep(state);\r\n      forEachNode(newState1, (node) => (node.isSelected = false));\r\n      return newState1;\r\n    case \"SET_IS_EXPANDED\":\r\n      const newState2 = cloneDeep(state);\r\n      forNodeAtPath(\r\n        newState2,\r\n        action.payload.path,\r\n        (node) => (node.isExpanded = action.payload.isExpanded)\r\n      );\r\n      return newState2;\r\n    case \"SET_IS_SELECTED\":\r\n      const newState3 = cloneDeep(state);\r\n      forNodeAtPath(\r\n        newState3,\r\n        action.payload.path,\r\n        (node) => (node.isSelected = action.payload.isSelected)\r\n      );\r\n      return newState3;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const TreeComponent: React.FC = (props) => {\r\n  const [nodes, dispatch] = React.useReducer(treeExampleReducer, INITIAL_STATE);\r\n\r\n  const handleNodeClick = React.useCallback(\r\n    (\r\n      node: TreeNodeInfo,\r\n      nodePath: NodePath,\r\n      e: React.MouseEvent<HTMLElement>\r\n    ) => {\r\n      const originallySelected = node.isSelected;\r\n      if (!e.shiftKey) {\r\n        dispatch({ type: \"DESELECT_ALL\" });\r\n      }\r\n      dispatch({\r\n        payload: {\r\n          path: nodePath,\r\n          isSelected: originallySelected == null ? true : !originallySelected,\r\n        },\r\n        type: \"SET_IS_SELECTED\",\r\n      });\r\n    },\r\n    []\r\n  );\r\n\r\n  const handleNodeCollapse = React.useCallback(\r\n    (_node: TreeNodeInfo, nodePath: NodePath) => {\r\n      dispatch({\r\n        payload: { path: nodePath, isExpanded: false },\r\n        type: \"SET_IS_EXPANDED\",\r\n      });\r\n    },\r\n    []\r\n  );\r\n\r\n  const handleNodeExpand = React.useCallback(\r\n    (_node: TreeNodeInfo, nodePath: NodePath) => {\r\n      dispatch({\r\n        payload: { path: nodePath, isExpanded: true },\r\n        type: \"SET_IS_EXPANDED\",\r\n      });\r\n    },\r\n    []\r\n  );\r\n\r\n  return (\r\n    <Tree\r\n      contents={nodes}\r\n      onNodeClick={handleNodeClick}\r\n      onNodeCollapse={handleNodeCollapse}\r\n      onNodeExpand={handleNodeExpand}\r\n      className={Classes.ELEVATION_0}\r\n    />\r\n  );\r\n};\r\n\r\nconst contentSizing = {\r\n  popoverProps: { popoverClassName: Popover2Classes.POPOVER2_CONTENT_SIZING },\r\n};\r\n\r\n/* tslint:disable:object-literal-sort-keys so childNodes can come last */\r\nconst INITIAL_STATE: TreeNodeInfo[] = [\r\n  {\r\n    id: 0,\r\n    hasCaret: true,\r\n    icon: \"folder-close\",\r\n    label: (\r\n      <ContextMenu2 {...contentSizing} content={<div>Hello there!</div>}>\r\n        Folder 0\r\n      </ContextMenu2>\r\n    ),\r\n  },\r\n  {\r\n    id: 1,\r\n    icon: \"folder-close\",\r\n    isExpanded: true,\r\n    label: (\r\n      <ContextMenu2 {...contentSizing} content={<div>Hello there!</div>}>\r\n        <Tooltip2 content=\"I'm a folder <3\" placement=\"right\">\r\n          Folder 1\r\n        </Tooltip2>\r\n      </ContextMenu2>\r\n    ),\r\n    childNodes: [\r\n      {\r\n        id: 2,\r\n        icon: \"document\",\r\n        label: \"Item 0\",\r\n        secondaryLabel: (\r\n          <Tooltip2 content=\"An eye!\">\r\n            <Icon icon=\"eye-open\" />\r\n          </Tooltip2>\r\n        ),\r\n      },\r\n      {\r\n        id: 3,\r\n        icon: (\r\n          <Icon\r\n            icon=\"tag\"\r\n            intent={Intent.PRIMARY}\r\n            className={Classes.TREE_NODE_ICON}\r\n          />\r\n        ),\r\n        label:\r\n          \"Organic meditation gluten-free, sriracha VHS drinking vinegar beard man.\",\r\n      },\r\n      {\r\n        id: 4,\r\n        hasCaret: true,\r\n        icon: \"folder-close\",\r\n        label: (\r\n          <ContextMenu2 {...contentSizing} content={<div>Hello there!</div>}>\r\n            <Tooltip2 content=\"foo\" placement=\"right\">\r\n              Folder 2\r\n            </Tooltip2>\r\n          </ContextMenu2>\r\n        ),\r\n        childNodes: [\r\n          { id: 5, label: \"No-Icon Item\" },\r\n          { id: 6, icon: \"tag\", label: \"Item 1\" },\r\n          {\r\n            id: 7,\r\n            hasCaret: true,\r\n            icon: \"folder-close\",\r\n            label: (\r\n              <ContextMenu2\r\n                {...contentSizing}\r\n                content={<div>Hello there!</div>}\r\n              >\r\n                Folder 3\r\n              </ContextMenu2>\r\n            ),\r\n            childNodes: [\r\n              { id: 8, icon: \"document\", label: \"Item 0\" },\r\n              { id: 9, icon: \"tag\", label: \"Item 1\" },\r\n            ],\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 2,\r\n    hasCaret: true,\r\n    icon: \"folder-close\",\r\n    label: \"Super secret files\",\r\n    disabled: true,\r\n  },\r\n];\r\n/* tslint:enable:object-literal-sort-keys */\r\n","import * as React from \"react\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  Classes,\r\n  Elevation,\r\n  H5,\r\n  H4,\r\n  Tabs,\r\n  Tab,\r\n  InputGroup,\r\n  Label,\r\n  Slider,\r\n  Switch,\r\n  Tree,\r\n  Intent,\r\n  Icon,\r\n  TreeNodeInfo,\r\n} from \"@blueprintjs/core\";\r\nimport { SideBarPanel1 } from \"./SideBarPanel1\";\r\nimport { SideBarPanel2 } from \"./SideBarPanel2\";\r\nimport {\r\n  Classes as Popover2Classes,\r\n  ContextMenu2,\r\n  Tooltip2,\r\n} from \"@blueprintjs/popover2\";\r\nimport { TreeComponent } from \"./TreeComponent\";\r\n\r\ntype NodePath = number[];\r\n\r\nexport interface ICard {\r\n  elevation: Elevation;\r\n  interactive: boolean;\r\n  animate: boolean;\r\n}\r\n\r\nexport class SideBar extends React.PureComponent {\r\n  public state: ICard = {\r\n    elevation: 2,\r\n    interactive: true,\r\n    animate: true,\r\n  };\r\n\r\n  public render() {\r\n    return (\r\n      <Card\r\n        {...this.state}\r\n        style={{\r\n          position: \"absolute\",\r\n          width: 200,\r\n          padding: 0,\r\n          height: \"calc(100vh - 50px)\",\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"baseline\",\r\n            padding: 10,\r\n          }}\r\n        >\r\n          <H4>SIDEBAR</H4>\r\n\r\n          <Button icon=\"menu-closed\" className={Classes.MINIMAL} />\r\n        </div>\r\n        <div style={{ padding: \"0px 15px 0px 15px\" }}>\r\n          <InputGroup\r\n            className={Classes.ROUND}\r\n            leftIcon=\"search\"\r\n            placeholder=\"Search...\"\r\n          />\r\n        </div>\r\n        <div style={{ padding: \"10px 15px 0px 15px\" }}>\r\n          <H5>Tree</H5>\r\n        </div>\r\n        <TreeComponent />\r\n      </Card>\r\n    );\r\n  }\r\n\r\n  private handleElevationChange = (elevation: Elevation) =>\r\n    this.setState({ elevation });\r\n\r\n  private handleInteractiveChange = () =>\r\n    this.setState({ interactive: !this.state.interactive });\r\n}\r\n\r\nconst contentSizing = {\r\n  popoverProps: { popoverClassName: Popover2Classes.POPOVER2_CONTENT_SIZING },\r\n};\r\n","import React from \"react\";\r\nimport logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\nimport { NavBar } from \"./components/Navbar/Navbar\";\r\nimport classNames from \"classnames\";\r\nimport { Classes, Drawer } from \"@blueprintjs/core\";\r\nimport { FocusStyleManager } from \"@blueprintjs/core\";\r\nimport { DatePicker, TimePrecision } from \"@blueprintjs/datetime\";\r\nimport { TableDollarExample } from \"./components/Table/Table\";\r\nimport { SideBar } from \"./components/SideBar/SideBar\";\r\nFocusStyleManager.onlyShowFocusOnTabs();\r\n\r\nfunction App() {\r\n  const [isDark, setIsDark] = React.useState(false);\r\n  const [isTable, setIsTable] = React.useState(false);\r\n  const [showTimeArrowButtons, setShowTimeArrowButtons] = React.useState(false);\r\n  const [date, setDate] = React.useState(new Date());\r\n\r\n  const handleDateChange = (date: Date) => {\r\n    setDate(date);\r\n  };\r\n\r\n  document.body.className = isDark ? \"bp3-dark\" : \"bp3-body\";\r\n  return (\r\n    <div>\r\n      <NavBar\r\n        alignRight\r\n        isDark={isDark}\r\n        onDarkClick={() => setIsDark(!isDark)}\r\n        onTableClick={() => setIsTable(!isTable)}\r\n        onHomeClick={() => setIsTable(false)}\r\n      />\r\n\r\n      <SideBar />\r\n\r\n      <div style={{ display: \"flex\", justifyContent: \"space-around\" }}>\r\n        {!isTable && (\r\n          <div\r\n            className={classNames(Classes.TEXT_LARGE, Classes.MONOSPACE_TEXT)}\r\n            style={{\r\n              display: \"flex\",\r\n              width: \"60%\",\r\n              flexDirection: \"column\",\r\n              padding: 25,\r\n            }}\r\n          >\r\n            <p>\r\n              We build products that make people better at their most important\r\n              work — the kind of work you read about on the front page of the\r\n              newspaper, not just the technology section.\r\n            </p>\r\n            <ul>\r\n              <li>\r\n                Item the <code>first</code>.\r\n              </li>\r\n              <li>Item the .</li>\r\n              <li>\r\n                Item the <a href=\"#core/typography.running-text\">third</a>.\r\n              </li>\r\n            </ul>\r\n            <h3>Scale, Speed, Agility</h3>\r\n            <p>\r\n              A successful data transformation requires the whole organization —\r\n              users, the IT shop, and leadership — to operate in lockstep. With\r\n              Foundry, the enterprise comes together to transform the\r\n              organization and turn data into a competitive advantage.\r\n            </p>\r\n          </div>\r\n        )}\r\n\r\n        {isTable && (\r\n          <div style={{ padding: 25 }}>\r\n            <TableDollarExample />\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div style={{ position: \"fixed\", right: 10, top: 65 }}>\r\n        <DatePicker\r\n          className={Classes.ELEVATION_1}\r\n          onChange={handleDateChange}\r\n          // timePickerProps={{ showArrowButtons: showTimeArrowButtons }}\r\n          value={date}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}